@page "/carros/add"
@page "/carros/edit/{Id:int}"

@using EstacionamentoFront.Models
@inject HttpClient Http
@inject NavigationManager Navigation

<h3>@(carro.Id == 0 ? "Adicionar Carro" : "Editar Carro")</h3>

<EditForm Model="@carro" OnValidSubmit="HandleValidSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="mb-3">
        <label for="modelo" class="form-label">Modelo</label>
        <InputText id="modelo" class="form-control" @bind-Value="carro.Modelo" />
    </div>
    <div class="mb-3">
        <label for="placa" class="form-label">Placa</label>
        <InputText id="placa" class="form-control" @bind-Value="carro.Placa" />
    </div>

    <button type="submit" class="btn btn-primary">Salvar</button>
</EditForm>

@if (!string.IsNullOrEmpty(mensagem))
{
    <div class="alert @alertClass mt-3">@mensagem</div>
}

@code {
    [Parameter] public int Id { get; set; }
    private Carro carro = new Carro();
    private string mensagem;
    private string alertClass;

    protected override async Task OnInitializedAsync()
    {
        if (Id != 0)
        {
            carro = await Http.GetFromJsonAsync<Carro>($"api/carros/{Id}");
        }
    }

    private async Task HandleValidSubmit()
    {
        try
        {
            HttpResponseMessage response;
            if (carro.Id == 0)
            {
                response = await Http.PostAsJsonAsync("api/carros", carro);
                if (response.IsSuccessStatusCode)
                {
                    mensagem = "Carro adicionado com sucesso!";
                    alertClass = "alert-success";
                }
                else
                {
                    mensagem = "Erro ao adicionar carro.";
                    alertClass = "alert-danger";
                }
            }
            else
            {
                response = await Http.PutAsJsonAsync($"api/carros/{carro.Id}", carro);
                if (response.IsSuccessStatusCode)
                {
                    mensagem = "Carro atualizado com sucesso!";
                    alertClass = "alert-success";
                }
                else
                {
                    mensagem = "Erro ao atualizar carro.";
                    alertClass = "alert-danger";
                }
            }

            if (response.IsSuccessStatusCode)
            {
                Navigation.NavigateTo("/carros");
            }
        }
        catch (Exception ex)
        {
            mensagem = $"Erro: {ex.Message}";
            alertClass = "alert-danger";
        }
    }
}
