@page "/carros/add"
@page "/carros/edit/{Id:int}"

@using EstacionamentoFront.Models
@inject HttpClient Http
@inject NavigationManager Navigation

<h3>@(carro.Id == 0 ? "Adicionar Carro" : "Editar Carro")</h3>

<EditForm Model="@carro" OnValidSubmit="HandleValidSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="mb-3">
        <label for="modelo" class="form-label">Modelo</label>
        <InputText id="modelo" class="form-control" @bind-Value="carro.Modelo" />
    </div>
    <div class="mb-3">
        <label for="placa" class="form-label">Placa</label>
        <InputText id="placa" class="form-control" @bind-Value="carro.Placa" />
    </div>

    <button type="submit" class="btn btn-primary">Salvar</button>
</EditForm>

@code {
    [Parameter] public int Id { get; set; }
    private Carro carro = new Carro();

    protected override async Task OnInitializedAsync()
    {
        if (Id != 0)
        {
            carro = await Http.GetFromJsonAsync<Carro>($"api/carros/{Id}");
        }
    }

    private async Task HandleValidSubmit()
    {
        if (carro.Id == 0)
        {
            await Http.PostAsJsonAsync("api/carros", carro);
        }
        else
        {
            await Http.PutAsJsonAsync("api/carros", carro);
        }
        Navigation.NavigateTo("/carros");
    }
}
